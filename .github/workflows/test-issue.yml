# .github/workflows/issue-on-push.yml
on: [push]
name: Create an issue on push
permissions:
  contents: read
  issues: write


jobs:
  stuff:
    runs-on: ubuntu-latest
    outputs: 
      github-issue-id: ${{ steps.create-issue.outputs.number }}
    steps:
      - uses: actions/checkout@v2
      - id: create-issue
        uses: JasonEtco/create-an-issue@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RUN_ID: ${{ toJson(github.run_id) }} 
    
      - name: test workflow id
        run: |
          echo ${{ toJson(github.run_id) }}


      - name: install-tfcmt
        run: |
          version=$(curl -LsS https://api.github.com/repos/suzuki-shunsuke/tfcmt/releases/latest | jq -r .name)
          curl -LsS https://github.com/suzuki-shunsuke/tfcmt/releases/download/${version}/tfcmt_linux_amd64.tar.gz -o /tmp/tfcmt_linux_amd64.tar.gz
          tar -xvzf /tmp/tfcmt_linux_amd64.tar.gz
          mv tfcmt /usr/local/bin/tfcmt
          chmod +x /usr/local/bin/tfcmt
        shell: bash


      - name: run tfcmt
        run: |
          cd sample-tf
          terraform init
          tfcmt plan -- terraform plan
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # wait-on-approval:
  #   runs-on: ubuntu-latest
  #   needs: stuff
  #   environment: stage
  #   steps:
  #     - name: test
  #       run: |
  #         echo "wait for approval"
  #         # exit 1
  
  test-another-job:
    uses: ./.github/workflows/mixed_inputs.yml
    needs: stuff
    with:
      # name: monalisa
      message: Hello worls
      # use-emoji: false
      environment: stage

      #Approval


  close-github-issue:
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs: [stuff, test-another-job]
    steps:
      - uses: actions/checkout@v2
      - name: test-output
        run: 
          echo ${{ needs.test-another-job.result }}
        shell: bash

      - name: Close Issue if job success
        if: ${{ needs.test-another-job.result == 'success' }}
        uses: peter-evans/close-issue@v2
        with:
          issue-number: ${{ needs.stuff.outputs.github-issue-id }}
          comment: Auto-closing issue 
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: update issue with comments if failed.
        if: ${{ needs.test-another-job.result == 'failure' }}
        uses: JasonEtco/create-an-issue@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          update_existing: true
          search_existing: all