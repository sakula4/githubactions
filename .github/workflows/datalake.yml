name: Deploy Databricks

on: 
  workflow_dispatch:
    inputs:
      region:
        type: choice
        description: Select region
        options:
        - us-east-1
        - us-west-1
      environment:
        type: environment

  # repository_dispatch:
  #   types:
  #     - manual-trigger-mytest
  #     - manual-trigger-all



jobs:
  alpine-generic:
    runs-on: ubuntu-latest
    steps:
      - name: Pull Generic alpine Image
        run: |
          docker pull tmccombs/hcl2json
          
      - name: Pull Generic alpine Image
        run: docker images

      - name: Save Docker Image
        run: |
          docker save --output alpine_generic.tar tmccombs/hcl2json

      - name: Cache Primes
        id: cache-primes
        uses: actions/cache@v3
        with:
          path: alpine_generic.tar
          key: alpine-generic-cache


  update:
    name: datalake for ${{ inputs.environment }}(${{ matrix.layers }})
    runs-on: ubuntu-latest
    needs: [alpine-generic] 
    # if: ${{ matrix.layers }}
    strategy: 
      max-parallel: 1
      matrix: 
        layers: ['datalake','tenant_network','workspace','cluster_policies','unity_catalog']
    steps:
      - name: Cache Primes
        id: cache-primes
        uses: actions/cache@v3
        with:
          path: alpine_generic.tar
          key: alpine-generic-cache
          restore-keys: |
            alpine-generic-cache

      - name: Display structure of downloaded files
        run: | 
          ls -lrth
          docker load --input alpine_generic.tar
          docker images


      - name: checkout
        uses: actions/checkout@v3

      - name: test layers
        id: layer
        shell: bash
        run: |
          echo "layerEnabled=$(docker run --rm -v $(pwd)/environments:/tmp tmccombs/hcl2json -- /tmp/${{ github.event.inputs.environment }}.hcl | jq .locals[0].${{ matrix.layers }}.enabled)" >> $GITHUB_OUTPUT

      - name: run terragrunt
        if: ${{ steps.layer.outputs.layerEnabled == 'true' }}
        run: |
          echo "test"
