name: Production
on:
  pull_request:
    branches:
      - "main"
    paths:
      - "production/**"
  push:
    branches:
      - "main"
    paths:
      - "production/**"
env:
  ENV: prod
  BASE_DIR: production
  AWS_DEFAULT_REGION: us-east-1
  AWS_IAM_ASSUME_ROLE: "arn:aws:iam::350828950339:role/gwt-acuity-infra-oidc-role"
  GITHUB_OAUTH_TOKEN: ${{secrets.PERSONAL_ACCESS_TOKEN}}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  TF_INPUT: false
  TERRAGRUNT_SOURCE_UPDATE: true
  TERRAGRUNT_FETCH_DEPENDENCY_OUTPUT_FROM_STATE: true
  DATABRICKS_USERNAME: ${{ secrets.DATABRICKS_USERNAME }}
  DATABRICKS_PASSWORD: ${{ secrets.DATABRICKS_PASSWORD }}

permissions:
  id-token: write
  contents: read
  pull-requests: write

concurrency: production

jobs:
  infra:
    name: Core-Infrastructure
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: setup
        uses: ./.github/actions/setup
        with:
          ssh_private_key: ${{ secrets.PRIVATE_SSH_KEY }}

      - name: Configure-AWS-Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{env.AWS_DEFAULT_REGION}}
          role-to-assume: ${{env.AWS_IAM_ASSUME_ROLE}}
          role-duration-seconds: 3600
          role-session-name: gh-actions

      - name: Account-Baseline
        uses: ./.github/actions/run-terragrunt
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          working_dir: $BASE_DIR/account/baseline
      
      - name: Deploy-SSMDocuments
        uses: ./.github/actions/run-terragrunt
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          working_dir: $BASE_DIR/account/ssm-documents

      - name: Visualization-Network
        uses: ./.github/actions/run-terragrunt
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          working_dir: $BASE_DIR/network/visualization
      
      - name: Data-Network
        uses: ./.github/actions/run-terragrunt
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          working_dir: $BASE_DIR/network/data
        
      - name: Postgres-Datastore
        uses: ./.github/actions/run-terragrunt
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          working_dir: $BASE_DIR/datastore/rds/abc

      - name: Application-Loadbalancer
        uses: ./.github/actions/run-terragrunt
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          working_dir: $BASE_DIR/loadbalancers/alb

  databricks:
    name: Databricks-Platform
    runs-on: ubuntu-latest
    needs: infra
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: setup
        uses: ./.github/actions/setup
        with:
          ssh_private_key: ${{ secrets.PRIVATE_SSH_KEY }}

      - name: Configure-AWS-Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{env.AWS_DEFAULT_REGION}}
          role-to-assume: ${{env.AWS_IAM_ASSUME_ROLE}}
          role-duration-seconds: 3600
          role-session-name: gh-actions

      - name: Databricks-Credentials
        uses: ./.github/actions/run-terragrunt
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          working_dir: $BASE_DIR/apps/databricks/credentials

      - name: Reference-Data-Store
        uses: ./.github/actions/run-terragrunt
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          working_dir: $BASE_DIR/apps/databricks/refdata

      - name: Databricks-ABC
        uses: ./.github/actions/run-terragrunt
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          working_dir: $BASE_DIR/apps/databricks/abc    

  tableau:
    name: Tableau-Servers
    runs-on: ubuntu-latest
    needs: infra
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: setup
        uses: ./.github/actions/setup
        with:
          ssh_private_key: ${{ secrets.PRIVATE_SSH_KEY }}

      - name: Configure-AWS-Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{env.AWS_DEFAULT_REGION}}
          role-to-assume: ${{env.AWS_IAM_ASSUME_ROLE}}
          role-duration-seconds: 3600
          role-session-name: gh-actions
          
      - name: Get-Okta-Credentials
        uses: bitovi/github-actions-aws-secrets-manager@v2.0.0
        with:
          secrets: |
            github/workflows/okta/prod 
          parse-json: true

      - name: Tableau-Deployment
        uses: ./.github/actions/run-terragrunt
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          working_dir: $BASE_DIR/apps/tableau
        env:
          OKTA_API_TOKEN: ${{ env.GITHUB_WORKFLOWS_OKTA_PROD_API_TOKEN }}
          OKTA_BASE_URL: ${{ env.GITHUB_WORKFLOWS_OKTA_PROD_BASE_URL }}

  oz:
    name: Tenant-Oz
    runs-on: ubuntu-latest
    needs: databricks
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: setup
        uses: ./.github/actions/setup
        with:
          ssh_private_key: ${{ secrets.PRIVATE_SSH_KEY }}

      - name: Configure-AWS-Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{env.AWS_DEFAULT_REGION}}
          role-to-assume: ${{env.AWS_IAM_ASSUME_ROLE}}
          role-duration-seconds: 3600
          role-session-name: gh-actions

      - name: Databricks-Network
        uses: ./.github/actions/run-terragrunt
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          working_dir: $BASE_DIR/tenants/landofoz/network

      - name: Databricks-Datalake
        uses: ./.github/actions/run-terragrunt
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          working_dir: $BASE_DIR/tenants/landofoz/databricks/datalake

      - name: Databricks-Workspace
        uses: ./.github/actions/run-terragrunt
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          working_dir: $BASE_DIR/tenants/landofoz/databricks/workspace

      - name: Databricks-UnityCatalog
        uses: ./.github/actions/run-terragrunt
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          working_dir: $BASE_DIR/tenants/landofoz/databricks/unity-catalog    

      - name: Databricks-Default-Cluster
        uses: ./.github/actions/run-terragrunt
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          working_dir: $BASE_DIR/tenants/landofoz/databricks/cluster
        continue-on-error: true
